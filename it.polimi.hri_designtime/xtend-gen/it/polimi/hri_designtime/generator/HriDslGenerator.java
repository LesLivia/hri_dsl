/**
 * generated by Xtext 2.28.0
 */
package it.polimi.hri_designtime.generator;

import com.google.common.collect.Iterators;
import it.polimi.hri_designtime.hriDsl.Mission;
import it.polimi.hri_designtime.hriDsl.Parameter;
import it.polimi.hri_designtime.hriDsl.Scenario;
import java.awt.geom.Point2D;
import java.util.ArrayList;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class HriDslGenerator extends AbstractGenerator {
  private ArrayList<Point2D.Float> intersections;
  
  private int max_n;
  
  private Operations op;
  
  private Json f;
  
  private Parameter parameter;
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    Operations _operations = new Operations();
    this.op = _operations;
    Json _json = new Json();
    this.f = _json;
    this.parameter = IteratorExtensions.<Parameter>head(Iterators.<Parameter>filter(resource.getAllContents(), Parameter.class));
    Iterable<Scenario> _iterable = IteratorExtensions.<Scenario>toIterable(Iterators.<Scenario>filter(resource.getAllContents(), Scenario.class));
    for (final Scenario scenario : _iterable) {
      {
        ArrayList<Point2D.Float> _arrayList = new ArrayList<Point2D.Float>();
        this.intersections = _arrayList;
        this.max_n = this.op.computeIntersections(scenario.getFloor(), this.intersections);
        EList<Mission> _missions = scenario.getMissions();
        for (final Mission mission : _missions) {
          String _substring = resource.getURI().lastSegment().substring(0, resource.getURI().lastSegment().indexOf(".hri"));
          String _plus = (_substring + "/");
          String _floor_name = scenario.getFloor().getFloor_name();
          String _plus_1 = (_plus + _floor_name);
          String _plus_2 = (_plus_1 + "/");
          String _name = mission.getName();
          String _plus_3 = (_plus_2 + _name);
          String _plus_4 = (_plus_3 + ".json");
          fsa.generateFile(_plus_4, this.f.pScenario(scenario, mission, this.intersections, this.max_n, this.parameter));
        }
      }
    }
  }
}
