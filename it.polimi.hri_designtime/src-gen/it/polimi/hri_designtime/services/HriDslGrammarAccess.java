/*
 * generated by Xtext 2.25.0
 */
package it.polimi.hri_designtime.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class HriDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cParameterAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cParameterParameterParserRuleCall_0_0 = (RuleCall)cParameterAssignment_0.eContents().get(0);
		private final Assignment cScenariosAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cScenariosScenarioParserRuleCall_1_0 = (RuleCall)cScenariosAssignment_1.eContents().get(0);
		
		//Model:
		//    parameter=(Parameter)? scenarios+=(Scenario)*;
		@Override public ParserRule getRule() { return rule; }
		
		//parameter=(Parameter)? scenarios+=(Scenario)*
		public Group getGroup() { return cGroup; }
		
		//parameter=(Parameter)?
		public Assignment getParameterAssignment_0() { return cParameterAssignment_0; }
		
		//(Parameter)
		public RuleCall getParameterParameterParserRuleCall_0_0() { return cParameterParameterParserRuleCall_0_0; }
		
		//scenarios+=(Scenario)*
		public Assignment getScenariosAssignment_1() { return cScenariosAssignment_1; }
		
		//(Scenario)
		public RuleCall getScenariosScenarioParserRuleCall_1_0() { return cScenariosScenarioParserRuleCall_1_0; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLength_unitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLength_unitAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLength_unitLength_unitEnumRuleCall_2_0 = (RuleCall)cLength_unitAssignment_2.eContents().get(0);
		
		//Parameter:
		//    'parameter' 'length_unit' length_unit=Length_unit;
		@Override public ParserRule getRule() { return rule; }
		
		//'parameter' 'length_unit' length_unit=Length_unit
		public Group getGroup() { return cGroup; }
		
		//'parameter'
		public Keyword getParameterKeyword_0() { return cParameterKeyword_0; }
		
		//'length_unit'
		public Keyword getLength_unitKeyword_1() { return cLength_unitKeyword_1; }
		
		//length_unit=Length_unit
		public Assignment getLength_unitAssignment_2() { return cLength_unitAssignment_2; }
		
		//Length_unit
		public RuleCall getLength_unitLength_unitEnumRuleCall_2_0() { return cLength_unitLength_unitEnumRuleCall_2_0; }
	}
	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Scenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFloorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFloorFloorParserRuleCall_0_0 = (RuleCall)cFloorAssignment_0.eContents().get(0);
		private final Assignment cRobotsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRobotsRobotsParserRuleCall_1_0 = (RuleCall)cRobotsAssignment_1.eContents().get(0);
		private final Assignment cHumansAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHumansHumansParserRuleCall_2_0 = (RuleCall)cHumansAssignment_2.eContents().get(0);
		private final Assignment cMissionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMissionsMissionParserRuleCall_3_0 = (RuleCall)cMissionsAssignment_3.eContents().get(0);
		
		//Scenario:
		//    floor=Floor robots=Robots humans=Humans missions+=(Mission)+;
		@Override public ParserRule getRule() { return rule; }
		
		//floor=Floor robots=Robots humans=Humans missions+=(Mission)+
		public Group getGroup() { return cGroup; }
		
		//floor=Floor
		public Assignment getFloorAssignment_0() { return cFloorAssignment_0; }
		
		//Floor
		public RuleCall getFloorFloorParserRuleCall_0_0() { return cFloorFloorParserRuleCall_0_0; }
		
		//robots=Robots
		public Assignment getRobotsAssignment_1() { return cRobotsAssignment_1; }
		
		//Robots
		public RuleCall getRobotsRobotsParserRuleCall_1_0() { return cRobotsRobotsParserRuleCall_1_0; }
		
		//humans=Humans
		public Assignment getHumansAssignment_2() { return cHumansAssignment_2; }
		
		//Humans
		public RuleCall getHumansHumansParserRuleCall_2_0() { return cHumansHumansParserRuleCall_2_0; }
		
		//missions+=(Mission)+
		public Assignment getMissionsAssignment_3() { return cMissionsAssignment_3; }
		
		//(Mission)
		public RuleCall getMissionsMissionParserRuleCall_3_0() { return cMissionsMissionParserRuleCall_3_0; }
	}
	public class FloorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Floor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLayoutKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFloor_nameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFloor_nameIDTerminalRuleCall_2_0 = (RuleCall)cFloor_nameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSurfacesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSurfacesSurfaceParserRuleCall_4_0 = (RuleCall)cSurfacesAssignment_4.eContents().get(0);
		private final Assignment cPointsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPointsPointParserRuleCall_5_0 = (RuleCall)cPointsAssignment_5.eContents().get(0);
		
		//Floor:
		//    'define' 'layout' floor_name=ID ':' surfaces+=(Surface)+  points+=(Point)+;
		@Override public ParserRule getRule() { return rule; }
		
		//'define' 'layout' floor_name=ID ':' surfaces+=(Surface)+  points+=(Point)+
		public Group getGroup() { return cGroup; }
		
		//'define'
		public Keyword getDefineKeyword_0() { return cDefineKeyword_0; }
		
		//'layout'
		public Keyword getLayoutKeyword_1() { return cLayoutKeyword_1; }
		
		//floor_name=ID
		public Assignment getFloor_nameAssignment_2() { return cFloor_nameAssignment_2; }
		
		//ID
		public RuleCall getFloor_nameIDTerminalRuleCall_2_0() { return cFloor_nameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//surfaces+=(Surface)+
		public Assignment getSurfacesAssignment_4() { return cSurfacesAssignment_4; }
		
		//(Surface)
		public RuleCall getSurfacesSurfaceParserRuleCall_4_0() { return cSurfacesSurfaceParserRuleCall_4_0; }
		
		//points+=(Point)+
		public Assignment getPointsAssignment_5() { return cPointsAssignment_5; }
		
		//(Point)
		public RuleCall getPointsPointParserRuleCall_5_0() { return cPointsPointParserRuleCall_5_0; }
	}
	public class SurfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Surface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAreaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cInKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVerticesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVerticesVerticesParserRuleCall_3_0 = (RuleCall)cVerticesAssignment_3.eContents().get(0);
		
		//Surface:
		//    'area' name=ID 'in' vertices=Vertices;
		@Override public ParserRule getRule() { return rule; }
		
		//'area' name=ID 'in' vertices=Vertices
		public Group getGroup() { return cGroup; }
		
		//'area'
		public Keyword getAreaKeyword_0() { return cAreaKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'in'
		public Keyword getInKeyword_2() { return cInKeyword_2; }
		
		//vertices=Vertices
		public Assignment getVerticesAssignment_3() { return cVerticesAssignment_3; }
		
		//Vertices
		public RuleCall getVerticesVerticesParserRuleCall_3_0() { return cVerticesVerticesParserRuleCall_3_0; }
	}
	public class VerticesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Vertices");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVertex_AAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVertex_ACoordinatesParserRuleCall_0_0 = (RuleCall)cVertex_AAssignment_0.eContents().get(0);
		private final Assignment cVertex_CAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVertex_CCoordinatesParserRuleCall_1_0 = (RuleCall)cVertex_CAssignment_1.eContents().get(0);
		
		//Vertices:
		//    vertex_A=Coordinates vertex_C=Coordinates;
		@Override public ParserRule getRule() { return rule; }
		
		//vertex_A=Coordinates vertex_C=Coordinates
		public Group getGroup() { return cGroup; }
		
		//vertex_A=Coordinates
		public Assignment getVertex_AAssignment_0() { return cVertex_AAssignment_0; }
		
		//Coordinates
		public RuleCall getVertex_ACoordinatesParserRuleCall_0_0() { return cVertex_ACoordinatesParserRuleCall_0_0; }
		
		//vertex_C=Coordinates
		public Assignment getVertex_CAssignment_1() { return cVertex_CAssignment_1; }
		
		//Coordinates
		public RuleCall getVertex_CCoordinatesParserRuleCall_1_0() { return cVertex_CCoordinatesParserRuleCall_1_0; }
	}
	public class PointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Point");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPoiKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cInKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCoordinatesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCoordinatesCoordinatesParserRuleCall_3_0 = (RuleCall)cCoordinatesAssignment_3.eContents().get(0);
		
		//Point:
		//    'poi' name=ID 'in' coordinates=Coordinates;
		@Override public ParserRule getRule() { return rule; }
		
		//'poi' name=ID 'in' coordinates=Coordinates
		public Group getGroup() { return cGroup; }
		
		//'poi'
		public Keyword getPoiKeyword_0() { return cPoiKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'in'
		public Keyword getInKeyword_2() { return cInKeyword_2; }
		
		//coordinates=Coordinates
		public Assignment getCoordinatesAssignment_3() { return cCoordinatesAssignment_3; }
		
		//Coordinates
		public RuleCall getCoordinatesCoordinatesParserRuleCall_3_0() { return cCoordinatesCoordinatesParserRuleCall_3_0; }
	}
	public class RobotsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Robots");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRobotsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRobotsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRobotsRobotParserRuleCall_3_0 = (RuleCall)cRobotsAssignment_3.eContents().get(0);
		
		//Robots:
		//    'define' 'robots' ':' robots+=(Robot)+;
		@Override public ParserRule getRule() { return rule; }
		
		//'define' 'robots' ':' robots+=(Robot)+
		public Group getGroup() { return cGroup; }
		
		//'define'
		public Keyword getDefineKeyword_0() { return cDefineKeyword_0; }
		
		//'robots'
		public Keyword getRobotsKeyword_1() { return cRobotsKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//robots+=(Robot)+
		public Assignment getRobotsAssignment_3() { return cRobotsAssignment_3; }
		
		//(Robot)
		public RuleCall getRobotsRobotParserRuleCall_3_0() { return cRobotsRobotParserRuleCall_3_0; }
	}
	public class RobotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Robot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRobotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cInKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCoordinatesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCoordinatesCoordinatesParserRuleCall_3_0 = (RuleCall)cCoordinatesAssignment_3.eContents().get(0);
		private final Keyword cTypeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeTypeEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Keyword cChargeKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCharge_percentageAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCharge_percentageINTTerminalRuleCall_7_0 = (RuleCall)cCharge_percentageAssignment_7.eContents().get(0);
		
		//Robot:
		//    'robot' name=ID 'in' coordinates=Coordinates 'type' type=Type 'charge' charge_percentage=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'robot' name=ID 'in' coordinates=Coordinates 'type' type=Type 'charge' charge_percentage=INT
		public Group getGroup() { return cGroup; }
		
		//'robot'
		public Keyword getRobotKeyword_0() { return cRobotKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'in'
		public Keyword getInKeyword_2() { return cInKeyword_2; }
		
		//coordinates=Coordinates
		public Assignment getCoordinatesAssignment_3() { return cCoordinatesAssignment_3; }
		
		//Coordinates
		public RuleCall getCoordinatesCoordinatesParserRuleCall_3_0() { return cCoordinatesCoordinatesParserRuleCall_3_0; }
		
		//'type'
		public Keyword getTypeKeyword_4() { return cTypeKeyword_4; }
		
		//type=Type
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//Type
		public RuleCall getTypeTypeEnumRuleCall_5_0() { return cTypeTypeEnumRuleCall_5_0; }
		
		//'charge'
		public Keyword getChargeKeyword_6() { return cChargeKeyword_6; }
		
		//charge_percentage=INT
		public Assignment getCharge_percentageAssignment_7() { return cCharge_percentageAssignment_7; }
		
		//INT
		public RuleCall getCharge_percentageINTTerminalRuleCall_7_0() { return cCharge_percentageINTTerminalRuleCall_7_0; }
	}
	public class HumansElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Humans");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cHumansKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHumansAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cHumansHumanParserRuleCall_3_0 = (RuleCall)cHumansAssignment_3.eContents().get(0);
		
		//Humans:
		//    'define' 'humans' ':' humans+=(Human)+;
		@Override public ParserRule getRule() { return rule; }
		
		//'define' 'humans' ':' humans+=(Human)+
		public Group getGroup() { return cGroup; }
		
		//'define'
		public Keyword getDefineKeyword_0() { return cDefineKeyword_0; }
		
		//'humans'
		public Keyword getHumansKeyword_1() { return cHumansKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//humans+=(Human)+
		public Assignment getHumansAssignment_3() { return cHumansAssignment_3; }
		
		//(Human)
		public RuleCall getHumansHumanParserRuleCall_3_0() { return cHumansHumanParserRuleCall_3_0; }
	}
	public class HumanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Human");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHumanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cInKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCoordinatesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCoordinatesCoordinatesParserRuleCall_3_0 = (RuleCall)cCoordinatesAssignment_3.eContents().get(0);
		private final Keyword cSpeedKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSpeedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSpeedFLOATTerminalRuleCall_5_0 = (RuleCall)cSpeedAssignment_5.eContents().get(0);
		private final Keyword cDexterityKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDextAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDextINTTerminalRuleCall_7_0 = (RuleCall)cDextAssignment_7.eContents().get(0);
		private final Keyword cIsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cFatigue_profileAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cFatigue_profileFatigue_profileEnumRuleCall_9_0 = (RuleCall)cFatigue_profileAssignment_9.eContents().get(0);
		private final Keyword cFreewillKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cFree_will_profileAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cFree_will_profileFree_will_profileEnumRuleCall_11_0 = (RuleCall)cFree_will_profileAssignment_11.eContents().get(0);
		
		//Human:
		//    'human' name=ID 'in' coordinates=Coordinates 'speed' speed=FLOAT 'dexterity' dext=INT 'is' fatigue_profile=Fatigue_profile 'freewill' free_will_profile=Free_will_profile;
		@Override public ParserRule getRule() { return rule; }
		
		//'human' name=ID 'in' coordinates=Coordinates 'speed' speed=FLOAT 'dexterity' dext=INT 'is' fatigue_profile=Fatigue_profile 'freewill' free_will_profile=Free_will_profile
		public Group getGroup() { return cGroup; }
		
		//'human'
		public Keyword getHumanKeyword_0() { return cHumanKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'in'
		public Keyword getInKeyword_2() { return cInKeyword_2; }
		
		//coordinates=Coordinates
		public Assignment getCoordinatesAssignment_3() { return cCoordinatesAssignment_3; }
		
		//Coordinates
		public RuleCall getCoordinatesCoordinatesParserRuleCall_3_0() { return cCoordinatesCoordinatesParserRuleCall_3_0; }
		
		//'speed'
		public Keyword getSpeedKeyword_4() { return cSpeedKeyword_4; }
		
		//speed=FLOAT
		public Assignment getSpeedAssignment_5() { return cSpeedAssignment_5; }
		
		//FLOAT
		public RuleCall getSpeedFLOATTerminalRuleCall_5_0() { return cSpeedFLOATTerminalRuleCall_5_0; }
		
		//'dexterity'
		public Keyword getDexterityKeyword_6() { return cDexterityKeyword_6; }
		
		//dext=INT
		public Assignment getDextAssignment_7() { return cDextAssignment_7; }
		
		//INT
		public RuleCall getDextINTTerminalRuleCall_7_0() { return cDextINTTerminalRuleCall_7_0; }
		
		//'is'
		public Keyword getIsKeyword_8() { return cIsKeyword_8; }
		
		//fatigue_profile=Fatigue_profile
		public Assignment getFatigue_profileAssignment_9() { return cFatigue_profileAssignment_9; }
		
		//Fatigue_profile
		public RuleCall getFatigue_profileFatigue_profileEnumRuleCall_9_0() { return cFatigue_profileFatigue_profileEnumRuleCall_9_0; }
		
		//'freewill'
		public Keyword getFreewillKeyword_10() { return cFreewillKeyword_10; }
		
		//free_will_profile=Free_will_profile
		public Assignment getFree_will_profileAssignment_11() { return cFree_will_profileAssignment_11; }
		
		//Free_will_profile
		public RuleCall getFree_will_profileFree_will_profileEnumRuleCall_11_0() { return cFree_will_profileFree_will_profileEnumRuleCall_11_0; }
	}
	public class MissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Mission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cMissionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAssignmentsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAssignmentsAssignmentParserRuleCall_4_0 = (RuleCall)cAssignmentsAssignment_4.eContents().get(0);
		private final Assignment cQueriesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cQueriesQueriesParserRuleCall_5_0 = (RuleCall)cQueriesAssignment_5.eContents().get(0);
		
		//Mission:
		//    'define' 'mission' name=ID ':' assignments+=(Assignment)+ queries=Queries;
		@Override public ParserRule getRule() { return rule; }
		
		//'define' 'mission' name=ID ':' assignments+=(Assignment)+ queries=Queries
		public Group getGroup() { return cGroup; }
		
		//'define'
		public Keyword getDefineKeyword_0() { return cDefineKeyword_0; }
		
		//'mission'
		public Keyword getMissionKeyword_1() { return cMissionKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//assignments+=(Assignment)+
		public Assignment getAssignmentsAssignment_4() { return cAssignmentsAssignment_4; }
		
		//(Assignment)
		public RuleCall getAssignmentsAssignmentParserRuleCall_4_0() { return cAssignmentsAssignmentParserRuleCall_4_0; }
		
		//queries=Queries
		public Assignment getQueriesAssignment_5() { return cQueriesAssignment_5; }
		
		//Queries
		public RuleCall getQueriesQueriesParserRuleCall_5_0() { return cQueriesQueriesParserRuleCall_5_0; }
	}
	public class AssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Assignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPatternAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPatternPatternEnumRuleCall_1_0 = (RuleCall)cPatternAssignment_1.eContents().get(0);
		private final Keyword cForKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cClientAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClientIDTerminalRuleCall_3_0 = (RuleCall)cClientAssignment_3.eContents().get(0);
		private final Keyword cWithKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cTargetKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTargetAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTargetIDTerminalRuleCall_6_0 = (RuleCall)cTargetAssignment_6.eContents().get(0);
		
		//Assignment:
		//    'do' pattern=Pattern 'for' client=ID 'with' 'target' target=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'do' pattern=Pattern 'for' client=ID 'with' 'target' target=ID
		public Group getGroup() { return cGroup; }
		
		//'do'
		public Keyword getDoKeyword_0() { return cDoKeyword_0; }
		
		//pattern=Pattern
		public Assignment getPatternAssignment_1() { return cPatternAssignment_1; }
		
		//Pattern
		public RuleCall getPatternPatternEnumRuleCall_1_0() { return cPatternPatternEnumRuleCall_1_0; }
		
		//'for'
		public Keyword getForKeyword_2() { return cForKeyword_2; }
		
		//client=ID
		public Assignment getClientAssignment_3() { return cClientAssignment_3; }
		
		//ID
		public RuleCall getClientIDTerminalRuleCall_3_0() { return cClientIDTerminalRuleCall_3_0; }
		
		//'with'
		public Keyword getWithKeyword_4() { return cWithKeyword_4; }
		
		//'target'
		public Keyword getTargetKeyword_5() { return cTargetKeyword_5; }
		
		//target=ID
		public Assignment getTargetAssignment_6() { return cTargetAssignment_6; }
		
		//ID
		public RuleCall getTargetIDTerminalRuleCall_6_0() { return cTargetIDTerminalRuleCall_6_0; }
	}
	public class QueriesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Queries");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cQueriesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cOfKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cMissionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMissionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMissionIDTerminalRuleCall_4_0 = (RuleCall)cMissionAssignment_4.eContents().get(0);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cQueriesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cQueriesQueryParserRuleCall_6_0 = (RuleCall)cQueriesAssignment_6.eContents().get(0);
		
		//Queries:
		//    'define' 'queries' 'of' 'mission' mission=ID ':' queries+=(Query)+;
		@Override public ParserRule getRule() { return rule; }
		
		//'define' 'queries' 'of' 'mission' mission=ID ':' queries+=(Query)+
		public Group getGroup() { return cGroup; }
		
		//'define'
		public Keyword getDefineKeyword_0() { return cDefineKeyword_0; }
		
		//'queries'
		public Keyword getQueriesKeyword_1() { return cQueriesKeyword_1; }
		
		//'of'
		public Keyword getOfKeyword_2() { return cOfKeyword_2; }
		
		//'mission'
		public Keyword getMissionKeyword_3() { return cMissionKeyword_3; }
		
		//mission=ID
		public Assignment getMissionAssignment_4() { return cMissionAssignment_4; }
		
		//ID
		public RuleCall getMissionIDTerminalRuleCall_4_0() { return cMissionIDTerminalRuleCall_4_0; }
		
		//':'
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//queries+=(Query)+
		public Assignment getQueriesAssignment_6() { return cQueriesAssignment_6; }
		
		//(Query)
		public RuleCall getQueriesQueryParserRuleCall_6_0() { return cQueriesQueryParserRuleCall_6_0; }
	}
	public class QueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Query");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComputeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cQuery_typeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cQuery_typeQuery_typeEnumRuleCall_1_0 = (RuleCall)cQuery_typeAssignment_1.eContents().get(0);
		private final Keyword cWithKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDurationKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDurationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDurationINTTerminalRuleCall_4_0 = (RuleCall)cDurationAssignment_4.eContents().get(0);
		private final Keyword cRunsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRunsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRunsSTRINGTerminalRuleCall_6_0 = (RuleCall)cRunsAssignment_6.eContents().get(0);
		
		//Query:
		//    'compute' query_type=Query_type 'with' 'duration' duration=INT 'runs' runs=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'compute' query_type=Query_type 'with' 'duration' duration=INT 'runs' runs=STRING
		public Group getGroup() { return cGroup; }
		
		//'compute'
		public Keyword getComputeKeyword_0() { return cComputeKeyword_0; }
		
		//query_type=Query_type
		public Assignment getQuery_typeAssignment_1() { return cQuery_typeAssignment_1; }
		
		//Query_type
		public RuleCall getQuery_typeQuery_typeEnumRuleCall_1_0() { return cQuery_typeQuery_typeEnumRuleCall_1_0; }
		
		//'with'
		public Keyword getWithKeyword_2() { return cWithKeyword_2; }
		
		//'duration'
		public Keyword getDurationKeyword_3() { return cDurationKeyword_3; }
		
		//duration=INT
		public Assignment getDurationAssignment_4() { return cDurationAssignment_4; }
		
		//INT
		public RuleCall getDurationINTTerminalRuleCall_4_0() { return cDurationINTTerminalRuleCall_4_0; }
		
		//'runs'
		public Keyword getRunsKeyword_5() { return cRunsKeyword_5; }
		
		//runs=STRING
		public Assignment getRunsAssignment_6() { return cRunsAssignment_6; }
		
		//STRING
		public RuleCall getRunsSTRINGTerminalRuleCall_6_0() { return cRunsSTRINGTerminalRuleCall_6_0; }
	}
	public class CoordinatesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Coordinates");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cXAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cXFLOATTerminalRuleCall_1_0 = (RuleCall)cXAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cYAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cYFLOATTerminalRuleCall_3_0 = (RuleCall)cYAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Coordinates:
		//    '(' x=FLOAT ',' y=FLOAT ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' x=FLOAT ',' y=FLOAT ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//x=FLOAT
		public Assignment getXAssignment_1() { return cXAssignment_1; }
		
		//FLOAT
		public RuleCall getXFLOATTerminalRuleCall_1_0() { return cXFLOATTerminalRuleCall_1_0; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//y=FLOAT
		public Assignment getYAssignment_3() { return cYAssignment_3; }
		
		//FLOAT
		public RuleCall getYFLOATTerminalRuleCall_3_0() { return cYFLOATTerminalRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	
	public class Length_unitElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Length_unit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMETEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMETERMKeyword_0_0 = (Keyword)cMETEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cKILOMETEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cKILOMETERKmKeyword_1_0 = (Keyword)cKILOMETEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCENTIMETEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCENTIMETERCmKeyword_2_0 = (Keyword)cCENTIMETEREnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Length_unit:
		//    METER='m'
		//    |KILOMETER='km'
		//    |CENTIMETER='cm';
		public EnumRule getRule() { return rule; }
		
		//METER='m'
		//|KILOMETER='km'
		//|CENTIMETER='cm'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//METER='m'
		public EnumLiteralDeclaration getMETEREnumLiteralDeclaration_0() { return cMETEREnumLiteralDeclaration_0; }
		
		//'m'
		public Keyword getMETERMKeyword_0_0() { return cMETERMKeyword_0_0; }
		
		//KILOMETER='km'
		public EnumLiteralDeclaration getKILOMETEREnumLiteralDeclaration_1() { return cKILOMETEREnumLiteralDeclaration_1; }
		
		//'km'
		public Keyword getKILOMETERKmKeyword_1_0() { return cKILOMETERKmKeyword_1_0; }
		
		//CENTIMETER='cm'
		public EnumLiteralDeclaration getCENTIMETEREnumLiteralDeclaration_2() { return cCENTIMETEREnumLiteralDeclaration_2; }
		
		//'cm'
		public Keyword getCENTIMETERCmKeyword_2_0() { return cCENTIMETERCmKeyword_2_0; }
	}
	public class TypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTURTLEBOT3_BURGEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTURTLEBOT3_BURGERTurtlebot3_burgerKeyword_0_0 = (Keyword)cTURTLEBOT3_BURGEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTURTLEBOT3_WAFFLEPIEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTURTLEBOT3_WAFFLEPITurtlebot3_wafflepiKeyword_1_0 = (Keyword)cTURTLEBOT3_WAFFLEPIEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTIAGOEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTIAGOTiagoKeyword_2_0 = (Keyword)cTIAGOEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPEPPEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPEPPERPepperKeyword_3_0 = (Keyword)cPEPPEREnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Type:
		//    TURTLEBOT3_BURGER='turtlebot3_burger'
		//    |TURTLEBOT3_WAFFLEPI='turtlebot3_wafflepi'
		//    |TIAGO='tiago'
		//    |PEPPER='pepper';
		public EnumRule getRule() { return rule; }
		
		//TURTLEBOT3_BURGER='turtlebot3_burger'
		//|TURTLEBOT3_WAFFLEPI='turtlebot3_wafflepi'
		//|TIAGO='tiago'
		//|PEPPER='pepper'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TURTLEBOT3_BURGER='turtlebot3_burger'
		public EnumLiteralDeclaration getTURTLEBOT3_BURGEREnumLiteralDeclaration_0() { return cTURTLEBOT3_BURGEREnumLiteralDeclaration_0; }
		
		//'turtlebot3_burger'
		public Keyword getTURTLEBOT3_BURGERTurtlebot3_burgerKeyword_0_0() { return cTURTLEBOT3_BURGERTurtlebot3_burgerKeyword_0_0; }
		
		//TURTLEBOT3_WAFFLEPI='turtlebot3_wafflepi'
		public EnumLiteralDeclaration getTURTLEBOT3_WAFFLEPIEnumLiteralDeclaration_1() { return cTURTLEBOT3_WAFFLEPIEnumLiteralDeclaration_1; }
		
		//'turtlebot3_wafflepi'
		public Keyword getTURTLEBOT3_WAFFLEPITurtlebot3_wafflepiKeyword_1_0() { return cTURTLEBOT3_WAFFLEPITurtlebot3_wafflepiKeyword_1_0; }
		
		//TIAGO='tiago'
		public EnumLiteralDeclaration getTIAGOEnumLiteralDeclaration_2() { return cTIAGOEnumLiteralDeclaration_2; }
		
		//'tiago'
		public Keyword getTIAGOTiagoKeyword_2_0() { return cTIAGOTiagoKeyword_2_0; }
		
		//PEPPER='pepper'
		public EnumLiteralDeclaration getPEPPEREnumLiteralDeclaration_3() { return cPEPPEREnumLiteralDeclaration_3; }
		
		//'pepper'
		public Keyword getPEPPERPepperKeyword_3_0() { return cPEPPERPepperKeyword_3_0; }
	}
	public class Fatigue_profileElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Fatigue_profile");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cYOUNG_HEALTHYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cYOUNG_HEALTHYYoung_healthyKeyword_0_0 = (Keyword)cYOUNG_HEALTHYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cYOUNG_SICKEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cYOUNG_SICKYoung_sickKeyword_1_0 = (Keyword)cYOUNG_SICKEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cELDERLY_HEALTHYEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cELDERLY_HEALTHYElderly_healthyKeyword_2_0 = (Keyword)cELDERLY_HEALTHYEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cELDERLY_SICKEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cELDERLY_SICKElderly_sickKeyword_3_0 = (Keyword)cELDERLY_SICKEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCOVID_PATIENTEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCOVID_PATIENTCovid_patientKeyword_4_0 = (Keyword)cCOVID_PATIENTEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum Fatigue_profile:
		//    YOUNG_HEALTHY='young_healthy'
		//    | YOUNG_SICK='young_sick'
		//    | ELDERLY_HEALTHY='elderly_healthy'
		//    | ELDERLY_SICK='elderly_sick'
		//    | COVID_PATIENT='covid_patient';
		public EnumRule getRule() { return rule; }
		
		//YOUNG_HEALTHY='young_healthy'
		//| YOUNG_SICK='young_sick'
		//| ELDERLY_HEALTHY='elderly_healthy'
		//| ELDERLY_SICK='elderly_sick'
		//| COVID_PATIENT='covid_patient'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//YOUNG_HEALTHY='young_healthy'
		public EnumLiteralDeclaration getYOUNG_HEALTHYEnumLiteralDeclaration_0() { return cYOUNG_HEALTHYEnumLiteralDeclaration_0; }
		
		//'young_healthy'
		public Keyword getYOUNG_HEALTHYYoung_healthyKeyword_0_0() { return cYOUNG_HEALTHYYoung_healthyKeyword_0_0; }
		
		//YOUNG_SICK='young_sick'
		public EnumLiteralDeclaration getYOUNG_SICKEnumLiteralDeclaration_1() { return cYOUNG_SICKEnumLiteralDeclaration_1; }
		
		//'young_sick'
		public Keyword getYOUNG_SICKYoung_sickKeyword_1_0() { return cYOUNG_SICKYoung_sickKeyword_1_0; }
		
		//ELDERLY_HEALTHY='elderly_healthy'
		public EnumLiteralDeclaration getELDERLY_HEALTHYEnumLiteralDeclaration_2() { return cELDERLY_HEALTHYEnumLiteralDeclaration_2; }
		
		//'elderly_healthy'
		public Keyword getELDERLY_HEALTHYElderly_healthyKeyword_2_0() { return cELDERLY_HEALTHYElderly_healthyKeyword_2_0; }
		
		//ELDERLY_SICK='elderly_sick'
		public EnumLiteralDeclaration getELDERLY_SICKEnumLiteralDeclaration_3() { return cELDERLY_SICKEnumLiteralDeclaration_3; }
		
		//'elderly_sick'
		public Keyword getELDERLY_SICKElderly_sickKeyword_3_0() { return cELDERLY_SICKElderly_sickKeyword_3_0; }
		
		//COVID_PATIENT='covid_patient'
		public EnumLiteralDeclaration getCOVID_PATIENTEnumLiteralDeclaration_4() { return cCOVID_PATIENTEnumLiteralDeclaration_4; }
		
		//'covid_patient'
		public Keyword getCOVID_PATIENTCovid_patientKeyword_4_0() { return cCOVID_PATIENTCovid_patientKeyword_4_0; }
	}
	public class Free_will_profileElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Free_will_profile");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNORMALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNORMALNormalKeyword_0_0 = (Keyword)cNORMALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHIGHEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHIGHHighKeyword_1_0 = (Keyword)cHIGHEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLOWEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLOWLowKeyword_2_0 = (Keyword)cLOWEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDISABLEDEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDISABLEDDisabledKeyword_3_0 = (Keyword)cDISABLEDEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Free_will_profile:
		//    NORMAL='normal'
		//    | HIGH='high'
		//    | LOW='low'
		//    | DISABLED='disabled';
		public EnumRule getRule() { return rule; }
		
		//NORMAL='normal'
		//| HIGH='high'
		//| LOW='low'
		//| DISABLED='disabled'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NORMAL='normal'
		public EnumLiteralDeclaration getNORMALEnumLiteralDeclaration_0() { return cNORMALEnumLiteralDeclaration_0; }
		
		//'normal'
		public Keyword getNORMALNormalKeyword_0_0() { return cNORMALNormalKeyword_0_0; }
		
		//HIGH='high'
		public EnumLiteralDeclaration getHIGHEnumLiteralDeclaration_1() { return cHIGHEnumLiteralDeclaration_1; }
		
		//'high'
		public Keyword getHIGHHighKeyword_1_0() { return cHIGHHighKeyword_1_0; }
		
		//LOW='low'
		public EnumLiteralDeclaration getLOWEnumLiteralDeclaration_2() { return cLOWEnumLiteralDeclaration_2; }
		
		//'low'
		public Keyword getLOWLowKeyword_2_0() { return cLOWLowKeyword_2_0; }
		
		//DISABLED='disabled'
		public EnumLiteralDeclaration getDISABLEDEnumLiteralDeclaration_3() { return cDISABLEDEnumLiteralDeclaration_3; }
		
		//'disabled'
		public Keyword getDISABLEDDisabledKeyword_3_0() { return cDISABLEDDisabledKeyword_3_0; }
	}
	public class PatternElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Pattern");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cROBOT_LEADEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cROBOT_LEADERRobot_leaderKeyword_0_0 = (Keyword)cROBOT_LEADEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cROBOT_FOLLOWEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cROBOT_FOLLOWERRobot_followerKeyword_1_0 = (Keyword)cROBOT_FOLLOWEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cROBOT_TRANSPORTEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cROBOT_TRANSPORTERRobot_transporterKeyword_2_0 = (Keyword)cROBOT_TRANSPORTEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cROBOT_COMPETITOREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cROBOT_COMPETITORRobot_competitorKeyword_3_0 = (Keyword)cROBOT_COMPETITOREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cROBOT_RESCUEREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cROBOT_RESCUERRobot_rescuerKeyword_4_0 = (Keyword)cROBOT_RESCUEREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cROBOT_ASSISTANTEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cROBOT_ASSISTANTRobot_clientKeyword_5_0 = (Keyword)cROBOT_ASSISTANTEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum Pattern:
		//    ROBOT_LEADER='robot_leader'
		//    | ROBOT_FOLLOWER='robot_follower'
		//    | ROBOT_TRANSPORTER='robot_transporter'
		//    | ROBOT_COMPETITOR='robot_competitor'
		//    | ROBOT_RESCUER='robot_rescuer'
		//    | ROBOT_ASSISTANT='robot_client';
		public EnumRule getRule() { return rule; }
		
		//ROBOT_LEADER='robot_leader'
		//| ROBOT_FOLLOWER='robot_follower'
		//| ROBOT_TRANSPORTER='robot_transporter'
		//| ROBOT_COMPETITOR='robot_competitor'
		//| ROBOT_RESCUER='robot_rescuer'
		//| ROBOT_ASSISTANT='robot_client'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ROBOT_LEADER='robot_leader'
		public EnumLiteralDeclaration getROBOT_LEADEREnumLiteralDeclaration_0() { return cROBOT_LEADEREnumLiteralDeclaration_0; }
		
		//'robot_leader'
		public Keyword getROBOT_LEADERRobot_leaderKeyword_0_0() { return cROBOT_LEADERRobot_leaderKeyword_0_0; }
		
		//ROBOT_FOLLOWER='robot_follower'
		public EnumLiteralDeclaration getROBOT_FOLLOWEREnumLiteralDeclaration_1() { return cROBOT_FOLLOWEREnumLiteralDeclaration_1; }
		
		//'robot_follower'
		public Keyword getROBOT_FOLLOWERRobot_followerKeyword_1_0() { return cROBOT_FOLLOWERRobot_followerKeyword_1_0; }
		
		//ROBOT_TRANSPORTER='robot_transporter'
		public EnumLiteralDeclaration getROBOT_TRANSPORTEREnumLiteralDeclaration_2() { return cROBOT_TRANSPORTEREnumLiteralDeclaration_2; }
		
		//'robot_transporter'
		public Keyword getROBOT_TRANSPORTERRobot_transporterKeyword_2_0() { return cROBOT_TRANSPORTERRobot_transporterKeyword_2_0; }
		
		//ROBOT_COMPETITOR='robot_competitor'
		public EnumLiteralDeclaration getROBOT_COMPETITOREnumLiteralDeclaration_3() { return cROBOT_COMPETITOREnumLiteralDeclaration_3; }
		
		//'robot_competitor'
		public Keyword getROBOT_COMPETITORRobot_competitorKeyword_3_0() { return cROBOT_COMPETITORRobot_competitorKeyword_3_0; }
		
		//ROBOT_RESCUER='robot_rescuer'
		public EnumLiteralDeclaration getROBOT_RESCUEREnumLiteralDeclaration_4() { return cROBOT_RESCUEREnumLiteralDeclaration_4; }
		
		//'robot_rescuer'
		public Keyword getROBOT_RESCUERRobot_rescuerKeyword_4_0() { return cROBOT_RESCUERRobot_rescuerKeyword_4_0; }
		
		//ROBOT_ASSISTANT='robot_client'
		public EnumLiteralDeclaration getROBOT_ASSISTANTEnumLiteralDeclaration_5() { return cROBOT_ASSISTANTEnumLiteralDeclaration_5; }
		
		//'robot_client'
		public Keyword getROBOT_ASSISTANTRobot_clientKeyword_5_0() { return cROBOT_ASSISTANTRobot_clientKeyword_5_0; }
	}
	public class Query_typeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.Query_type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSIMULATIONEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSIMULATIONSimulationKeyword_0_0 = (Keyword)cSIMULATIONEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPROBABILITY_OF_SUCCESSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPROBABILITY_OF_SUCCESSProbability_of_successKeyword_1_0 = (Keyword)cPROBABILITY_OF_SUCCESSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEXPECTED_FATIGUEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEXPECTED_FATIGUEExpected_fatigueKeyword_2_0 = (Keyword)cEXPECTED_FATIGUEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cEXPECTED_CHARGEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cEXPECTED_CHARGEExpected_chargeKeyword_3_0 = (Keyword)cEXPECTED_CHARGEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cPROBABILITY_OF_FAILUREEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cPROBABILITY_OF_FAILUREProbability_of_failureKeyword_4_0 = (Keyword)cPROBABILITY_OF_FAILUREEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum Query_type:
		//    SIMULATION='simulation'
		//    | PROBABILITY_OF_SUCCESS='probability_of_success'
		//    | EXPECTED_FATIGUE='expected_fatigue'
		//     | EXPECTED_CHARGE='expected_charge'
		//     | PROBABILITY_OF_FAILURE='probability_of_failure';
		public EnumRule getRule() { return rule; }
		
		//SIMULATION='simulation'
		//| PROBABILITY_OF_SUCCESS='probability_of_success'
		//| EXPECTED_FATIGUE='expected_fatigue'
		// | EXPECTED_CHARGE='expected_charge'
		// | PROBABILITY_OF_FAILURE='probability_of_failure'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SIMULATION='simulation'
		public EnumLiteralDeclaration getSIMULATIONEnumLiteralDeclaration_0() { return cSIMULATIONEnumLiteralDeclaration_0; }
		
		//'simulation'
		public Keyword getSIMULATIONSimulationKeyword_0_0() { return cSIMULATIONSimulationKeyword_0_0; }
		
		//PROBABILITY_OF_SUCCESS='probability_of_success'
		public EnumLiteralDeclaration getPROBABILITY_OF_SUCCESSEnumLiteralDeclaration_1() { return cPROBABILITY_OF_SUCCESSEnumLiteralDeclaration_1; }
		
		//'probability_of_success'
		public Keyword getPROBABILITY_OF_SUCCESSProbability_of_successKeyword_1_0() { return cPROBABILITY_OF_SUCCESSProbability_of_successKeyword_1_0; }
		
		//EXPECTED_FATIGUE='expected_fatigue'
		public EnumLiteralDeclaration getEXPECTED_FATIGUEEnumLiteralDeclaration_2() { return cEXPECTED_FATIGUEEnumLiteralDeclaration_2; }
		
		//'expected_fatigue'
		public Keyword getEXPECTED_FATIGUEExpected_fatigueKeyword_2_0() { return cEXPECTED_FATIGUEExpected_fatigueKeyword_2_0; }
		
		//EXPECTED_CHARGE='expected_charge'
		public EnumLiteralDeclaration getEXPECTED_CHARGEEnumLiteralDeclaration_3() { return cEXPECTED_CHARGEEnumLiteralDeclaration_3; }
		
		//'expected_charge'
		public Keyword getEXPECTED_CHARGEExpected_chargeKeyword_3_0() { return cEXPECTED_CHARGEExpected_chargeKeyword_3_0; }
		
		//PROBABILITY_OF_FAILURE='probability_of_failure'
		public EnumLiteralDeclaration getPROBABILITY_OF_FAILUREEnumLiteralDeclaration_4() { return cPROBABILITY_OF_FAILUREEnumLiteralDeclaration_4; }
		
		//'probability_of_failure'
		public Keyword getPROBABILITY_OF_FAILUREProbability_of_failureKeyword_4_0() { return cPROBABILITY_OF_FAILUREProbability_of_failureKeyword_4_0; }
	}
	
	private final ModelElements pModel;
	private final ParameterElements pParameter;
	private final Length_unitElements eLength_unit;
	private final ScenarioElements pScenario;
	private final FloorElements pFloor;
	private final SurfaceElements pSurface;
	private final VerticesElements pVertices;
	private final PointElements pPoint;
	private final RobotsElements pRobots;
	private final RobotElements pRobot;
	private final TypeElements eType;
	private final HumansElements pHumans;
	private final HumanElements pHuman;
	private final Fatigue_profileElements eFatigue_profile;
	private final Free_will_profileElements eFree_will_profile;
	private final MissionElements pMission;
	private final AssignmentElements pAssignment;
	private final PatternElements ePattern;
	private final QueriesElements pQueries;
	private final QueryElements pQuery;
	private final Query_typeElements eQuery_type;
	private final CoordinatesElements pCoordinates;
	private final TerminalRule tFLOAT;
	private final TerminalRule tDEC;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public HriDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pParameter = new ParameterElements();
		this.eLength_unit = new Length_unitElements();
		this.pScenario = new ScenarioElements();
		this.pFloor = new FloorElements();
		this.pSurface = new SurfaceElements();
		this.pVertices = new VerticesElements();
		this.pPoint = new PointElements();
		this.pRobots = new RobotsElements();
		this.pRobot = new RobotElements();
		this.eType = new TypeElements();
		this.pHumans = new HumansElements();
		this.pHuman = new HumanElements();
		this.eFatigue_profile = new Fatigue_profileElements();
		this.eFree_will_profile = new Free_will_profileElements();
		this.pMission = new MissionElements();
		this.pAssignment = new AssignmentElements();
		this.ePattern = new PatternElements();
		this.pQueries = new QueriesElements();
		this.pQuery = new QueryElements();
		this.eQuery_type = new Query_typeElements();
		this.pCoordinates = new CoordinatesElements();
		this.tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.FLOAT");
		this.tDEC = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "it.polimi.hri_designtime.HriDsl.DEC");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("it.polimi.hri_designtime.HriDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    parameter=(Parameter)? scenarios+=(Scenario)*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Parameter:
	//    'parameter' 'length_unit' length_unit=Length_unit;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//enum Length_unit:
	//    METER='m'
	//    |KILOMETER='km'
	//    |CENTIMETER='cm';
	public Length_unitElements getLength_unitAccess() {
		return eLength_unit;
	}
	
	public EnumRule getLength_unitRule() {
		return getLength_unitAccess().getRule();
	}
	
	//Scenario:
	//    floor=Floor robots=Robots humans=Humans missions+=(Mission)+;
	public ScenarioElements getScenarioAccess() {
		return pScenario;
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}
	
	//Floor:
	//    'define' 'layout' floor_name=ID ':' surfaces+=(Surface)+  points+=(Point)+;
	public FloorElements getFloorAccess() {
		return pFloor;
	}
	
	public ParserRule getFloorRule() {
		return getFloorAccess().getRule();
	}
	
	//Surface:
	//    'area' name=ID 'in' vertices=Vertices;
	public SurfaceElements getSurfaceAccess() {
		return pSurface;
	}
	
	public ParserRule getSurfaceRule() {
		return getSurfaceAccess().getRule();
	}
	
	//Vertices:
	//    vertex_A=Coordinates vertex_C=Coordinates;
	public VerticesElements getVerticesAccess() {
		return pVertices;
	}
	
	public ParserRule getVerticesRule() {
		return getVerticesAccess().getRule();
	}
	
	//Point:
	//    'poi' name=ID 'in' coordinates=Coordinates;
	public PointElements getPointAccess() {
		return pPoint;
	}
	
	public ParserRule getPointRule() {
		return getPointAccess().getRule();
	}
	
	//Robots:
	//    'define' 'robots' ':' robots+=(Robot)+;
	public RobotsElements getRobotsAccess() {
		return pRobots;
	}
	
	public ParserRule getRobotsRule() {
		return getRobotsAccess().getRule();
	}
	
	//Robot:
	//    'robot' name=ID 'in' coordinates=Coordinates 'type' type=Type 'charge' charge_percentage=INT;
	public RobotElements getRobotAccess() {
		return pRobot;
	}
	
	public ParserRule getRobotRule() {
		return getRobotAccess().getRule();
	}
	
	//enum Type:
	//    TURTLEBOT3_BURGER='turtlebot3_burger'
	//    |TURTLEBOT3_WAFFLEPI='turtlebot3_wafflepi'
	//    |TIAGO='tiago'
	//    |PEPPER='pepper';
	public TypeElements getTypeAccess() {
		return eType;
	}
	
	public EnumRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//Humans:
	//    'define' 'humans' ':' humans+=(Human)+;
	public HumansElements getHumansAccess() {
		return pHumans;
	}
	
	public ParserRule getHumansRule() {
		return getHumansAccess().getRule();
	}
	
	//Human:
	//    'human' name=ID 'in' coordinates=Coordinates 'speed' speed=FLOAT 'dexterity' dext=INT 'is' fatigue_profile=Fatigue_profile 'freewill' free_will_profile=Free_will_profile;
	public HumanElements getHumanAccess() {
		return pHuman;
	}
	
	public ParserRule getHumanRule() {
		return getHumanAccess().getRule();
	}
	
	//enum Fatigue_profile:
	//    YOUNG_HEALTHY='young_healthy'
	//    | YOUNG_SICK='young_sick'
	//    | ELDERLY_HEALTHY='elderly_healthy'
	//    | ELDERLY_SICK='elderly_sick'
	//    | COVID_PATIENT='covid_patient';
	public Fatigue_profileElements getFatigue_profileAccess() {
		return eFatigue_profile;
	}
	
	public EnumRule getFatigue_profileRule() {
		return getFatigue_profileAccess().getRule();
	}
	
	//enum Free_will_profile:
	//    NORMAL='normal'
	//    | HIGH='high'
	//    | LOW='low'
	//    | DISABLED='disabled';
	public Free_will_profileElements getFree_will_profileAccess() {
		return eFree_will_profile;
	}
	
	public EnumRule getFree_will_profileRule() {
		return getFree_will_profileAccess().getRule();
	}
	
	//Mission:
	//    'define' 'mission' name=ID ':' assignments+=(Assignment)+ queries=Queries;
	public MissionElements getMissionAccess() {
		return pMission;
	}
	
	public ParserRule getMissionRule() {
		return getMissionAccess().getRule();
	}
	
	//Assignment:
	//    'do' pattern=Pattern 'for' client=ID 'with' 'target' target=ID;
	public AssignmentElements getAssignmentAccess() {
		return pAssignment;
	}
	
	public ParserRule getAssignmentRule() {
		return getAssignmentAccess().getRule();
	}
	
	//enum Pattern:
	//    ROBOT_LEADER='robot_leader'
	//    | ROBOT_FOLLOWER='robot_follower'
	//    | ROBOT_TRANSPORTER='robot_transporter'
	//    | ROBOT_COMPETITOR='robot_competitor'
	//    | ROBOT_RESCUER='robot_rescuer'
	//    | ROBOT_ASSISTANT='robot_client';
	public PatternElements getPatternAccess() {
		return ePattern;
	}
	
	public EnumRule getPatternRule() {
		return getPatternAccess().getRule();
	}
	
	//Queries:
	//    'define' 'queries' 'of' 'mission' mission=ID ':' queries+=(Query)+;
	public QueriesElements getQueriesAccess() {
		return pQueries;
	}
	
	public ParserRule getQueriesRule() {
		return getQueriesAccess().getRule();
	}
	
	//Query:
	//    'compute' query_type=Query_type 'with' 'duration' duration=INT 'runs' runs=STRING;
	public QueryElements getQueryAccess() {
		return pQuery;
	}
	
	public ParserRule getQueryRule() {
		return getQueryAccess().getRule();
	}
	
	//enum Query_type:
	//    SIMULATION='simulation'
	//    | PROBABILITY_OF_SUCCESS='probability_of_success'
	//    | EXPECTED_FATIGUE='expected_fatigue'
	//     | EXPECTED_CHARGE='expected_charge'
	//     | PROBABILITY_OF_FAILURE='probability_of_failure';
	public Query_typeElements getQuery_typeAccess() {
		return eQuery_type;
	}
	
	public EnumRule getQuery_typeRule() {
		return getQuery_typeAccess().getRule();
	}
	
	//Coordinates:
	//    '(' x=FLOAT ',' y=FLOAT ')';
	public CoordinatesElements getCoordinatesAccess() {
		return pCoordinates;
	}
	
	public ParserRule getCoordinatesRule() {
		return getCoordinatesAccess().getRule();
	}
	
	//terminal FLOAT returns ecore::EFloat:
	//    INT DEC;
	public TerminalRule getFLOATRule() {
		return tFLOAT;
	}
	
	//terminal DEC:
	//    '.' INT;
	public TerminalRule getDECRule() {
		return tDEC;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
