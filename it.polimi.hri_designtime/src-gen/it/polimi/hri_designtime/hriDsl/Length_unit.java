/**
 * generated by Xtext 2.29.0
 */
package it.polimi.hri_designtime.hriDsl;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Length unit</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see it.polimi.hri_designtime.hriDsl.HriDslPackage#getLength_unit()
 * @model
 * @generated
 */
public enum Length_unit implements Enumerator
{
  /**
   * The '<em><b>METER</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #METER_VALUE
   * @generated
   * @ordered
   */
  METER(0, "METER", "m"),

  /**
   * The '<em><b>KILOMETER</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #KILOMETER_VALUE
   * @generated
   * @ordered
   */
  KILOMETER(1, "KILOMETER", "km"),

  /**
   * The '<em><b>CENTIMETER</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CENTIMETER_VALUE
   * @generated
   * @ordered
   */
  CENTIMETER(2, "CENTIMETER", "cm");

  /**
   * The '<em><b>METER</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #METER
   * @model literal="m"
   * @generated
   * @ordered
   */
  public static final int METER_VALUE = 0;

  /**
   * The '<em><b>KILOMETER</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #KILOMETER
   * @model literal="km"
   * @generated
   * @ordered
   */
  public static final int KILOMETER_VALUE = 1;

  /**
   * The '<em><b>CENTIMETER</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CENTIMETER
   * @model literal="cm"
   * @generated
   * @ordered
   */
  public static final int CENTIMETER_VALUE = 2;

  /**
   * An array of all the '<em><b>Length unit</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final Length_unit[] VALUES_ARRAY =
    new Length_unit[]
    {
      METER,
      KILOMETER,
      CENTIMETER,
    };

  /**
   * A public read-only list of all the '<em><b>Length unit</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<Length_unit> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Length unit</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Length_unit get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Length_unit result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Length unit</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Length_unit getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Length_unit result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Length unit</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Length_unit get(int value)
  {
    switch (value)
    {
      case METER_VALUE: return METER;
      case KILOMETER_VALUE: return KILOMETER;
      case CENTIMETER_VALUE: return CENTIMETER;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private Length_unit(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //Length_unit
