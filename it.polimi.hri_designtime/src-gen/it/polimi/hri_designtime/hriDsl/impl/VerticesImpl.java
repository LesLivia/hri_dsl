/**
 * generated by Xtext 2.28.0
 */
package it.polimi.hri_designtime.hriDsl.impl;

import it.polimi.hri_designtime.hriDsl.Coordinates;
import it.polimi.hri_designtime.hriDsl.HriDslPackage;
import it.polimi.hri_designtime.hriDsl.Vertices;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Vertices</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.polimi.hri_designtime.hriDsl.impl.VerticesImpl#getVertex_A <em>Vertex A</em>}</li>
 *   <li>{@link it.polimi.hri_designtime.hriDsl.impl.VerticesImpl#getVertex_C <em>Vertex C</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VerticesImpl extends MinimalEObjectImpl.Container implements Vertices
{
  /**
   * The cached value of the '{@link #getVertex_A() <em>Vertex A</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVertex_A()
   * @generated
   * @ordered
   */
  protected Coordinates vertex_A;

  /**
   * The cached value of the '{@link #getVertex_C() <em>Vertex C</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVertex_C()
   * @generated
   * @ordered
   */
  protected Coordinates vertex_C;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VerticesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HriDslPackage.Literals.VERTICES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Coordinates getVertex_A()
  {
    return vertex_A;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVertex_A(Coordinates newVertex_A, NotificationChain msgs)
  {
    Coordinates oldVertex_A = vertex_A;
    vertex_A = newVertex_A;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, HriDslPackage.VERTICES__VERTEX_A, oldVertex_A, newVertex_A);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVertex_A(Coordinates newVertex_A)
  {
    if (newVertex_A != vertex_A)
    {
      NotificationChain msgs = null;
      if (vertex_A != null)
        msgs = ((InternalEObject)vertex_A).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - HriDslPackage.VERTICES__VERTEX_A, null, msgs);
      if (newVertex_A != null)
        msgs = ((InternalEObject)newVertex_A).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - HriDslPackage.VERTICES__VERTEX_A, null, msgs);
      msgs = basicSetVertex_A(newVertex_A, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HriDslPackage.VERTICES__VERTEX_A, newVertex_A, newVertex_A));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Coordinates getVertex_C()
  {
    return vertex_C;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVertex_C(Coordinates newVertex_C, NotificationChain msgs)
  {
    Coordinates oldVertex_C = vertex_C;
    vertex_C = newVertex_C;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, HriDslPackage.VERTICES__VERTEX_C, oldVertex_C, newVertex_C);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVertex_C(Coordinates newVertex_C)
  {
    if (newVertex_C != vertex_C)
    {
      NotificationChain msgs = null;
      if (vertex_C != null)
        msgs = ((InternalEObject)vertex_C).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - HriDslPackage.VERTICES__VERTEX_C, null, msgs);
      if (newVertex_C != null)
        msgs = ((InternalEObject)newVertex_C).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - HriDslPackage.VERTICES__VERTEX_C, null, msgs);
      msgs = basicSetVertex_C(newVertex_C, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HriDslPackage.VERTICES__VERTEX_C, newVertex_C, newVertex_C));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case HriDslPackage.VERTICES__VERTEX_A:
        return basicSetVertex_A(null, msgs);
      case HriDslPackage.VERTICES__VERTEX_C:
        return basicSetVertex_C(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HriDslPackage.VERTICES__VERTEX_A:
        return getVertex_A();
      case HriDslPackage.VERTICES__VERTEX_C:
        return getVertex_C();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HriDslPackage.VERTICES__VERTEX_A:
        setVertex_A((Coordinates)newValue);
        return;
      case HriDslPackage.VERTICES__VERTEX_C:
        setVertex_C((Coordinates)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HriDslPackage.VERTICES__VERTEX_A:
        setVertex_A((Coordinates)null);
        return;
      case HriDslPackage.VERTICES__VERTEX_C:
        setVertex_C((Coordinates)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HriDslPackage.VERTICES__VERTEX_A:
        return vertex_A != null;
      case HriDslPackage.VERTICES__VERTEX_C:
        return vertex_C != null;
    }
    return super.eIsSet(featureID);
  }

} //VerticesImpl
