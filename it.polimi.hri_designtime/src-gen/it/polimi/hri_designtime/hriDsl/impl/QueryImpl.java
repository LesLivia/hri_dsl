/**
 * generated by Xtext 2.28.0
 */
package it.polimi.hri_designtime.hriDsl.impl;

import it.polimi.hri_designtime.hriDsl.HriDslPackage;
import it.polimi.hri_designtime.hriDsl.Query;
import it.polimi.hri_designtime.hriDsl.Query_type;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Query</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.polimi.hri_designtime.hriDsl.impl.QueryImpl#getQuery_type <em>Query type</em>}</li>
 *   <li>{@link it.polimi.hri_designtime.hriDsl.impl.QueryImpl#getDuration <em>Duration</em>}</li>
 *   <li>{@link it.polimi.hri_designtime.hriDsl.impl.QueryImpl#getRuns <em>Runs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class QueryImpl extends MinimalEObjectImpl.Container implements Query
{
  /**
   * The default value of the '{@link #getQuery_type() <em>Query type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuery_type()
   * @generated
   * @ordered
   */
  protected static final Query_type QUERY_TYPE_EDEFAULT = Query_type.SIMULATION;

  /**
   * The cached value of the '{@link #getQuery_type() <em>Query type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuery_type()
   * @generated
   * @ordered
   */
  protected Query_type query_type = QUERY_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getDuration() <em>Duration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected static final int DURATION_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDuration() <em>Duration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected int duration = DURATION_EDEFAULT;

  /**
   * The default value of the '{@link #getRuns() <em>Runs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRuns()
   * @generated
   * @ordered
   */
  protected static final int RUNS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRuns() <em>Runs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRuns()
   * @generated
   * @ordered
   */
  protected int runs = RUNS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QueryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HriDslPackage.Literals.QUERY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Query_type getQuery_type()
  {
    return query_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQuery_type(Query_type newQuery_type)
  {
    Query_type oldQuery_type = query_type;
    query_type = newQuery_type == null ? QUERY_TYPE_EDEFAULT : newQuery_type;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HriDslPackage.QUERY__QUERY_TYPE, oldQuery_type, query_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getDuration()
  {
    return duration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDuration(int newDuration)
  {
    int oldDuration = duration;
    duration = newDuration;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HriDslPackage.QUERY__DURATION, oldDuration, duration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRuns()
  {
    return runs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRuns(int newRuns)
  {
    int oldRuns = runs;
    runs = newRuns;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HriDslPackage.QUERY__RUNS, oldRuns, runs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HriDslPackage.QUERY__QUERY_TYPE:
        return getQuery_type();
      case HriDslPackage.QUERY__DURATION:
        return getDuration();
      case HriDslPackage.QUERY__RUNS:
        return getRuns();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HriDslPackage.QUERY__QUERY_TYPE:
        setQuery_type((Query_type)newValue);
        return;
      case HriDslPackage.QUERY__DURATION:
        setDuration((Integer)newValue);
        return;
      case HriDslPackage.QUERY__RUNS:
        setRuns((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HriDslPackage.QUERY__QUERY_TYPE:
        setQuery_type(QUERY_TYPE_EDEFAULT);
        return;
      case HriDslPackage.QUERY__DURATION:
        setDuration(DURATION_EDEFAULT);
        return;
      case HriDslPackage.QUERY__RUNS:
        setRuns(RUNS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HriDslPackage.QUERY__QUERY_TYPE:
        return query_type != QUERY_TYPE_EDEFAULT;
      case HriDslPackage.QUERY__DURATION:
        return duration != DURATION_EDEFAULT;
      case HriDslPackage.QUERY__RUNS:
        return runs != RUNS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (query_type: ");
    result.append(query_type);
    result.append(", duration: ");
    result.append(duration);
    result.append(", runs: ");
    result.append(runs);
    result.append(')');
    return result.toString();
  }

} //QueryImpl
